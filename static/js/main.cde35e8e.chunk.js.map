{"version":3,"sources":["libs/Design.js","libs/Game.js","components/Slider.js","libs/Color.js","components/ColorPicker.js","components/Board.js","App.js","index.js"],"names":["designs","name","data","Design","names","i","length","push","grid","width","height","x","y","p","find","design","l","Game","parameter","value","Object","classCallCheck","this","getNames","resize","initialize","generation","createEmptyGrid","createRandomGrid","createTestGrid","lastFrame","Date","now","reset","v","base","Array","fill","index","draw","speed","thisFrame","m0","m2","n0","n1","n2","c","w","h","g","Math","random","dx","floor","dy","j","Slider","react_default","a","createElement","className","type","min","props","max","onChange","React","Component","Color","r","b","toString","slice","hex","result","exec","parseInt","ColorPicker","Board","_this","possibleConstructorReturn","getPrototypeOf","call","border","onMouseDown","bind","assertThisInitialized","onMouseMove","onMouseUp","onContextMenu","rect","canvas","getBoundingClientRect","left","top","drawGrid","event","button","clientX","cellSize","clientY","drawing","drawCell","preventDefault","handleContextMenu","px","py","steps","showGrid","ctx","getContext","lineWidth","rs","s","clearRect","strokeStyle","fillStyle","fillRect","color1","color2","r1","g1","b1","r2","g2","b2","colors","interpolate","color","t","start","end","count","_this2","style","ref","elem","App","runFrame","handleDrawCell","onClickRunPause","onClickShowHideGrid","onClickClear","onChangeSize","onChangeSpeed","onChangeColor","onChangeSteps","onChangeRandomPercent","onClickRandom","onChangeTestItems","onClickTest","onContextMenuItemClick","onClick","onKeyDown","onResize","outerWidth","window","outerHeight","gridInfo","calcGridSize","game","state","contextMenu","running","randomPercent","testItems","color1raw","color2raw","boardSize","interval","setInterval","addEventListener","clearInterval","removeEventListener","innerWidth","innerHeight","updateGeneration","setState","doNothing","sx","sy","context","offsetWidth","offsetHeight","contextMenuX","contextMenuY","contextMenuTargetX","contextMenuTargetY","Number","target","fromString","drawItem","keyCode","href","rel","readOnly","toLocaleString","components_Slider","components_ColorPicker","e","components_Board","map","item","key","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.cde35e8e.chunk.js","sourcesContent":["const designs = [\r\n    {\r\n        name: 'Block',\r\n        data: [\r\n            0, 0, 1, 0, 0, 1, 1, 1\r\n        ]\r\n    },\r\n    {\r\n        name: 'Beehive',\r\n        data: [\r\n            1, 0, 2, 0, 0, 1, 3, 1, 1, 2, 2, 2\r\n        ]\r\n    },\r\n    {\r\n        name: 'Loaf',\r\n        data: [\r\n            1, 0, 2, 0, 0, 1, 3, 1, 1, 2, 3, 2, 2, 3\r\n        ]\r\n    },\r\n    {\r\n        name: 'Boat',\r\n        data: [\r\n            0, 0, 1, 0, 0, 1, 2, 1, 1, 2\r\n        ]\r\n    },\r\n    {\r\n        name: 'Tub',\r\n        data: [\r\n            1, 0, 0, 1, 2, 1, 1, 2\r\n        ]\r\n    },\r\n    {\r\n        name: 'Blinker',\r\n        data: [\r\n            0, 1, 1, 1, 2, 1\r\n        ]\r\n    },\r\n    {\r\n        name: 'Toad',\r\n        data: [\r\n            1, 1, 2, 1, 3, 1, 0, 2, 1, 2, 2, 2\r\n        ]\r\n    },\r\n    {\r\n        name: 'Beacon',\r\n        data: [\r\n            0, 0, 1, 0, 0, 1, 3, 2, 2, 3, 3, 3\r\n        ]\r\n    },\r\n    {\r\n        name: 'Pulsar',\r\n        data: [\r\n            2, 0, 3, 0, 4, 0, 8, 0, 9, 0, 10, 0, 0, 2, 5, 2, 7, 2, 12, 2, 0, 3, 5, 3, 7, 3, 12, 3, 0, 4, 5, 4, 7, 4, 12, 4, 2, 5, 3, 5, 4, 5, 8, 5, 9, 5, 10, 5, 2, 7, 3, 7, 4, 7, 8, 7, 9, 7, 10, 7, 0, 8, 5, 8, 7, 8, 12, 8, 0, 9, 5, 9, 7, 9, 12, 9, 0, 10, 5, 10, 7, 10, 12, 10, 2, 12, 3, 12, 4, 12, 8, 12, 9, 12, 10, 12\r\n        ]\r\n    },\r\n    {\r\n        name: 'Pentadecathon',\r\n        data: [\r\n            3, 2, 4, 2, 5, 2, 2, 3, 6, 3, 2, 4, 6, 4, 3, 5, 4, 5, 5, 5, 3, 10, 4, 10, 5, 10, 2, 11, 6, 11, 2, 12, 6, 12, 3, 13, 4, 13, 5, 13\r\n        ]\r\n    },\r\n    {\r\n        name: 'Glider',\r\n        data: [\r\n            1, 1, 2, 2, 3, 2, 1, 3, 2, 3\r\n        ]\r\n    },\r\n    {\r\n        name: 'LWSS',\r\n        data: [\r\n            2, 0, 3, 0, 1, 1, 2, 1, 3, 1, 4, 1, 1, 2, 2, 2, 4, 2, 5, 2, 3, 3, 4, 3\r\n        ]\r\n    },\r\n    {\r\n        name: 'R-pentomino',\r\n        data: [\r\n            1, 0, 2, 0, 0, 1, 1, 1, 1, 2\r\n        ]\r\n    },\r\n    {\r\n        name: 'Diehard',\r\n        data: [\r\n            6, 0, 0, 1, 1, 1, 1, 2, 5, 2, 6, 2, 7, 2\r\n        ]\r\n    },\r\n    {\r\n        name: 'Acorn',\r\n        data: [\r\n            1, 0, 3, 1, 0, 2, 1, 2, 4, 2, 5, 2, 6, 2\r\n        ]\r\n    },\r\n    {\r\n        name: 'Gosper\\'s Glider Gun',\r\n        data: [\r\n            25, 0, 23, 1, 25, 1, 13, 2, 14, 2, 21, 2, 22, 2, 35, 2, 36, 2, 12, 3, 16, 3, 21, 3, 22, 3, 35, 3, 36, 3, 1, 4, 2, 4, 11, 4, 17, 4, 21, 4, 22, 4, 1, 5, 2, 5, 11, 5, 15, 5, 17, 5, 18, 5, 23, 5, 25, 5, 11, 6, 17, 6, 25, 6, 12, 7, 16, 7, 13, 8, 14, 8\r\n        ]\r\n    },\r\n    {\r\n        name: 'PatternX',\r\n        data: [\r\n            6, 0, 4, 1, 6, 1, 7, 1, 4, 2, 6, 2, 4, 3, 2, 4, 0, 5, 2, 5\r\n        ]\r\n    },\r\n    {\r\n        name: 'PatternY',\r\n        data: [\r\n            0, 0, 1, 0, 2, 0, 4, 0, 0, 1, 3, 2, 4, 2, 1, 3, 2, 3, 4, 3, 0, 4, 2, 4, 4, 4\r\n        ]\r\n    },\r\n    {\r\n        name: 'PatternZ',\r\n        data: [\r\n            0, 0, 1, 0, 2, 0, 3, 0, 4, 0, 5, 0, 6, 0, 7, 0, 9, 0, 10, 0, 11, 0, 12, 0, 13, 0, 17, 0, 18, 0, 19, 0, 26, 0, 27, 0, 28, 0, 29, 0, 30, 0, 31, 0, 32, 0, 34, 0, 35, 0, 36, 0, 37, 0, 38, 0\r\n        ]\r\n    }\r\n]\r\n\r\nclass Design {\r\n    static getNames() {\r\n        let names = []\r\n\r\n        for (let i = 0; i < designs.length; i++) {\r\n            names.push(designs[i].name)\r\n        }\r\n\r\n        return names\r\n    }\r\n\r\n    static draw(grid, width, height, x, y, name) {\r\n        const design = designs.find((design) => {\r\n            if (design.name === name) {\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        })\r\n\r\n        const p = design.data\r\n        const l = p.length\r\n        let ax\r\n        let ay\r\n\r\n        for (let i = 0; i < l; i += 2) {\r\n            ax = (x + p[i]) % width\r\n            ay = (y + p[i + 1]) % height\r\n            grid[ax + ay * width] = 1\r\n        }\r\n    }\r\n}\r\n\r\nexport default Design","import Design from './Design'\r\n\r\nclass Game {\r\n    constructor(width, height, parameter, value) {\r\n        this.names = Design.getNames()\r\n        this.resize(width, height)\r\n        this.initialize(parameter, value)\r\n    }\r\n\r\n    initialize(parameter, value) {\r\n        this.generation = 0\r\n\r\n        if (parameter === 'empty') {\r\n            this.createEmptyGrid()\r\n        } else if (parameter === 'random') {\r\n            this.createRandomGrid(value)\r\n        } else if (parameter === 'test') {\r\n            this.createTestGrid(value)\r\n        }\r\n    }\r\n\r\n    reset() {\r\n        this.lastFrame = Date.now()\r\n        this.grid = null\r\n        this.generation = 0\r\n    }\r\n\r\n    resize(width, height) {\r\n        this.reset()\r\n        this.width = width\r\n        this.height = height\r\n    }\r\n\r\n    doNothing() {\r\n        this.lastFrame = Date.now()\r\n    }\r\n\r\n    drawCell(x, y, v) {\r\n        if (!this.grid) {\r\n            this.createEmptyGrid()\r\n        }\r\n\r\n        const base = this.grid\r\n        const length = base.length\r\n        const grid = new Array(length).fill(0)\r\n\r\n        for (let i = 0; i < length; i++) {\r\n            grid[i] = base[i]\r\n        }\r\n\r\n        const index = x + y * this.width\r\n\r\n        if (v) {\r\n            grid[index] = v\r\n        } else {\r\n            grid[index] = 0\r\n        }\r\n\r\n        this.grid = grid\r\n    }\r\n\r\n    drawItem(x, y, name) {\r\n        if (!this.grid) {\r\n            this.createEmptyGrid()\r\n        }\r\n\r\n        const base = this.grid\r\n        const length = base.length\r\n        const grid = new Array(length).fill(0)\r\n\r\n        for (let i = 0; i < length; i++) {\r\n            grid[i] = base[i]\r\n        }\r\n\r\n        Design.draw(grid, this.width, this.height, x, y, name)\r\n\r\n        this.grid = grid\r\n    }\r\n\r\n    updateGeneration(speed) {\r\n        this.thisFrame = Date.now()\r\n\r\n        var elapsed = this.thisFrame - this.lastFrame\r\n\r\n        const rate = 410 - speed * 4\r\n\r\n        if (elapsed < rate) {\r\n            return false\r\n        }\r\n\r\n        this.lastFrame = this.thisFrame\r\n\r\n        if (!this.grid) {\r\n            this.createEmptyGrid()\r\n        }\r\n\r\n        const base = this.grid\r\n        const length = base.length\r\n        const w = this.width\r\n        const h = this.height\r\n        const grid = new Array(length).fill(0)\r\n\r\n        let m0\r\n        let m2\r\n\r\n        let n0\r\n        let n1\r\n        let n2\r\n\r\n        let c\r\n        let l\r\n        let v\r\n\r\n        for (let y = 0; y < h; y++) {\r\n            n1 = y * w\r\n\r\n            if (y === 0) {\r\n                n0 = (h - 1) * w\r\n                n2 = (y + 1) * w\r\n            } else if (y === h - 1) {\r\n                n0 = (y - 1) * w\r\n                n2 = 0\r\n            } else {\r\n                n0 = (y - 1) * w\r\n                n2 = (y + 1) * w\r\n            }\r\n\r\n            for (let x = 0; x < w; x++) {\r\n                if (x === 0) {\r\n                    m0 = w - 1\r\n                    m2 = x + 1\r\n                } else if (x === w - 1) {\r\n                    m0 = x - 1\r\n                    m2 = 0\r\n                } else {\r\n                    m0 = x - 1\r\n                    m2 = x + 1\r\n                }\r\n\r\n                c = 0\r\n\r\n                if (base[m0 + n0] !== 0) {\r\n                    c++\r\n                }\r\n                if (base[x + n0] !== 0) {\r\n                    c++\r\n                }\r\n                if (base[m2 + n0] !== 0) {\r\n                    c++\r\n                }\r\n                if (base[m0 + n1] !== 0) {\r\n                    c++\r\n                }\r\n                if (base[m2 + n1] !== 0) {\r\n                    c++\r\n                }\r\n                if (base[m0 + n2] !== 0) {\r\n                    c++\r\n                }\r\n                if (base[x + n2] !== 0) {\r\n                    c++\r\n                }\r\n                if (base[m2 + n2] !== 0) {\r\n                    c++\r\n                }\r\n\r\n                l = x + n1\r\n\r\n                v = base[l]\r\n\r\n                if (v) {\r\n                    if (c === 2 || c === 3) {\r\n                        grid[l] = v + 1\r\n                    }\r\n                } else {\r\n                    if (c === 3) {\r\n                        grid[l] = v + 1\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        this.grid = grid\r\n        this.generation++\r\n\r\n        return true\r\n    }\r\n\r\n    createEmptyGrid() {\r\n        this.grid = new Array(this.width * this.height).fill(0)\r\n    }\r\n\r\n    createRandomGrid(value) {\r\n        this.createEmptyGrid()\r\n\r\n        const g = this.grid\r\n        const l = g.length\r\n\r\n        for (let i = 0; i < l; i++) {\r\n            if (Math.random() < value) {\r\n                g[i] = 1\r\n            }\r\n        }\r\n    }\r\n\r\n    createTestGrid(value) {\r\n        this.createEmptyGrid()\r\n\r\n        const l = this.names.length;\r\n\r\n        for (let i = 0; i < value; i++) {\r\n            let dx = Math.floor(Math.random() * this.width)\r\n            let dy = Math.floor(Math.random() * this.height)\r\n            let j = Math.floor(Math.random() * l)\r\n            Design.draw(this.grid, this.width, this.height, dx, dy, this.names[j])\r\n        }\r\n    }\r\n}\r\n\r\nexport default Game","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nclass Slider extends React.Component {\r\n    render() {\r\n        return (\r\n            <input className=\"slider\" type=\"range\" min={this.props.min} max={this.props.max} onChange={this.props.onChange} value={this.props.value} />\r\n        )\r\n    }\r\n}\r\n\r\nSlider.propTypes = {\r\n    value: PropTypes.number.isRequired,\r\n    onChange: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Slider","class Color {\r\n    constructor(r, g, b) {\r\n        this.r = r\r\n        this.g = g\r\n        this.b = b\r\n    }\r\n\r\n    toString() {\r\n        return \"#\" + ((1 << 24) + (this.r << 16) + (this.g << 8) + this.b).toString(16).slice(1);\r\n    }\r\n\r\n    fromString(hex) {\r\n        var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n\r\n        if (result) {\r\n            this.r = parseInt(result[1], 16)\r\n            this.g = parseInt(result[2], 16)\r\n            this.b = parseInt(result[3], 16)\r\n        }\r\n    }\r\n}\r\n\r\nexport default Color","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nclass ColorPicker extends React.Component {\r\n    render() {\r\n        return (\r\n            <input className=\"color-picker\" type=\"color\" value={this.props.value} onChange={this.props.onChange} />\r\n        )\r\n    }\r\n}\r\n\r\nColorPicker.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired\r\n}\r\n\r\nexport default ColorPicker","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Color from '../libs/Color'\r\n\r\nclass Board extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.border = 5\r\n        this.onMouseDown = this.onMouseDown.bind(this)\r\n        this.onMouseMove = this.onMouseMove.bind(this)\r\n        this.onMouseUp = this.onMouseUp.bind(this)\r\n        this.onContextMenu = this.onContextMenu.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        var rect = this.canvas.getBoundingClientRect();\r\n        this.dx = rect.left + this.border\r\n        this.dy = rect.top + this.border\r\n        this.drawGrid()\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        var rect = this.canvas.getBoundingClientRect();\r\n        this.dx = rect.left + this.border\r\n        this.dy = rect.top + this.border\r\n        this.drawGrid()\r\n    }\r\n\r\n    onMouseDown(event) {\r\n        if (event.button === 0) {\r\n            this.x = Math.floor((event.clientX - this.dx) / this.props.cellSize)\r\n            this.y = Math.floor((event.clientY - this.dy) / this.props.cellSize)\r\n            this.drawing = true\r\n            this.drawCell(this.x, this.y)\r\n        }\r\n    }\r\n\r\n    onMouseMove(event) {\r\n        this.x = Math.floor((event.clientX - this.dx) / this.props.cellSize)\r\n        this.y = Math.floor((event.clientY - this.dy) / this.props.cellSize)\r\n\r\n        if (this.drawing) {\r\n            this.drawCell(this.x, this.y)\r\n        }\r\n    }\r\n\r\n    onMouseUp(event) {\r\n        if (event.button === 0) {\r\n            this.drawing = false\r\n        }\r\n    }\r\n\r\n    onContextMenu(event) {\r\n        event.preventDefault()\r\n        const x = Math.floor((event.clientX - this.dx) / this.props.cellSize)\r\n        const y = Math.floor((event.clientY - this.dy) / this.props.cellSize)\r\n        this.props.handleContextMenu(event.clientX, event.clientY, x, y)\r\n    }\r\n\r\n    drawCell(x, y) {\r\n        if (x !== this.px || y !== this.py) {\r\n            this.props.drawCell(x, y)\r\n            this.px = x\r\n            this.py = y\r\n        }\r\n    }\r\n\r\n    drawGrid() {\r\n        if (this.props.grid === this.grid && this.props.width === this.width && this.props.height === this.height && this.props.steps === this.steps && this.props.showGrid === this.showGrid) {\r\n            return;\r\n        }\r\n\r\n        this.grid = this.props.grid\r\n        this.width = this.props.width\r\n        this.height = this.props.height\r\n        this.steps = this.props.steps\r\n        this.showGrid = this.props.showGrid\r\n\r\n        const ctx = this.canvas.getContext('2d');\r\n\r\n        ctx.lineWidth = 1\r\n\r\n        const w = this.props.width\r\n        const h = this.props.height\r\n        const s = this.props.cellSize\r\n\r\n        ctx.clearRect(0, 0, w * s, h * s)\r\n\r\n        let rs\r\n\r\n        if (this.props.showGrid && s > 2) {\r\n            rs = s - 1\r\n\r\n            ctx.strokeStyle = 'white'\r\n            ctx.fillStyle = 'white'\r\n\r\n            for (let y = 0; y < h; y++) {\r\n                ctx.fillRect(0, y * s + rs, w * s, 1)\r\n            }\r\n\r\n            for (let x = 0; x < w; x++) {\r\n                ctx.fillRect(x * s + rs, 0, 1, h * s)\r\n            }\r\n        } else {\r\n            rs = s\r\n        }\r\n\r\n        if (!this.grid) {\r\n            return;\r\n        }\r\n\r\n        const grid = this.props.grid\r\n        const length = grid.length\r\n\r\n        const color1 = this.props.color1.toString()\r\n        const color2 = this.props.color2.toString()\r\n\r\n        const r1 = this.props.color1.r\r\n        const g1 = this.props.color1.g\r\n        const b1 = this.props.color1.b\r\n\r\n        const r2 = this.props.color2.r\r\n        const g2 = this.props.color2.g\r\n        const b2 = this.props.color2.b\r\n\r\n        let r\r\n        let g\r\n        let b\r\n        let colors = []\r\n\r\n        const steps = this.props.steps\r\n\r\n        for (let i = 1; i < steps; i++) {\r\n            r = this.interpolate(r1, r2, steps, i)\r\n            g = this.interpolate(g1, g2, steps, i)\r\n            b = this.interpolate(b1, b2, steps, i)\r\n            colors.push(new Color(r, g, b).toString())\r\n        }\r\n\r\n        const t = steps + 1\r\n\r\n        let color\r\n\r\n        for (let index = 0; index < length; index++) {\r\n            const v = grid[index]\r\n\r\n            if (v !== 0) {\r\n                const x = index % w\r\n                const y = Math.floor(index / w)\r\n\r\n                if (v <= 2) {\r\n                    ctx.strokeStyle = color1\r\n                    ctx.fillStyle = color1\r\n                } else if (v > t) {\r\n                    ctx.strokeStyle = color2\r\n                    ctx.fillStyle = color2\r\n                } else {\r\n                    color = colors[v - 3]\r\n                    ctx.strokeStyle = color\r\n                    ctx.fillStyle = color\r\n                }\r\n\r\n                ctx.fillRect(x * s, y * s, rs, rs)\r\n            }\r\n        }\r\n    }\r\n\r\n    interpolate(start, end, steps, count) {\r\n        return Math.floor(start + (((end - start) / steps) * count))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <canvas style={{ border: this.border + 'px solid white' }}\r\n                ref={elem => this.canvas = elem} onContextMenu={this.onContextMenu}\r\n                width={this.props.width * this.props.cellSize} height={this.props.height * this.props.cellSize}\r\n                onMouseDown={this.onMouseDown} onMouseMove={this.onMouseMove} onMouseUp={this.onMouseUp} />\r\n        )\r\n    }\r\n}\r\n\r\nBoard.propTypes = {\r\n    width: PropTypes.number.isRequired,\r\n    height: PropTypes.number.isRequired,\r\n    cellSize: PropTypes.number.isRequired,\r\n    grid: PropTypes.arrayOf(\r\n        PropTypes.number\r\n    ),\r\n    showGrid: PropTypes.bool.isRequired,\r\n    color1: PropTypes.instanceOf(\r\n        Color\r\n    ).isRequired,\r\n    color2: PropTypes.instanceOf(\r\n        Color\r\n    ).isRequired,\r\n    steps: PropTypes.number.isRequired,\r\n    drawCell: PropTypes.func.isRequired,\r\n    handleContextMenu: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Board","import React from 'react'\r\nimport Game from './libs/Game'\r\nimport Slider from './components/Slider'\r\nimport Color from './libs/Color'\r\nimport ColorPicker from './components/ColorPicker'\r\nimport Board from './components/Board'\r\n\r\n// Objective: Build a CodePen.io app that is functionally similar to this: https://codepen.io/FreeCodeCamp/full/reGdqx/.\r\n// User Story: When I first arrive at the game, it will randomly generate a board and start playing.\r\n// User Story: I can start and stop the board.\r\n// User Story: I can set up the board.\r\n// User Story: I can clear the board.\r\n// User Story: When I press start, the game will play out.\r\n// User Story: Each time the board changes, I can see how many generations have gone by.\r\n// Hint: Here's an explanation of Conway's Game of Life from John Conway himself: https://www.youtube.com/watch?v=E8kUJL04ELA\r\n// Hint: Here's an overview of Conway's Game of Life with rules for your reference: https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.runFrame = this.runFrame.bind(this)\r\n        this.handleDrawCell = this.handleDrawCell.bind(this)\r\n        this.handleContextMenu = this.handleContextMenu.bind(this)\r\n\r\n        this.onClickRunPause = this.onClickRunPause.bind(this)\r\n        this.onClickShowHideGrid = this.onClickShowHideGrid.bind(this)\r\n        this.onClickClear = this.onClickClear.bind(this)\r\n\r\n        this.onChangeSize = this.onChangeSize.bind(this)\r\n        this.onChangeSpeed = this.onChangeSpeed.bind(this)\r\n        this.onChangeColor = this.onChangeColor.bind(this)\r\n        this.onChangeSteps = this.onChangeSteps.bind(this)\r\n\r\n        this.onChangeRandomPercent = this.onChangeRandomPercent.bind(this)\r\n        this.onClickRandom = this.onClickRandom.bind(this)\r\n\r\n        this.onChangeTestItems = this.onChangeTestItems.bind(this)\r\n        this.onClickTest = this.onClickTest.bind(this)\r\n\r\n        this.onContextMenuItemClick = this.onContextMenuItemClick.bind(this)\r\n\r\n        this.onClick = this.onClick.bind(this)\r\n        this.onKeyDown = this.onKeyDown.bind(this)\r\n        this.onResize = this.onResize.bind(this)\r\n\r\n        this.outerWidth = window.outerWidth\r\n        this.outerHeight = window.outerHeight\r\n\r\n        const gridInfo = this.calcGridSize(80)\r\n\r\n        this.game = new Game(gridInfo.width, gridInfo.height, 'random', 0.1)\r\n\r\n        const color1 = new Color(255, 0, 0)\r\n        const color2 = new Color(0, 0, 255)\r\n\r\n        this.state = {\r\n            contextMenu: false,\r\n            running: true,\r\n            showGrid: true,\r\n            speed: 80,\r\n            steps: 80,\r\n            randomPercent: 5,\r\n            testItems: 10,\r\n            color1raw: color1.toString(),\r\n            color1: color1,\r\n            color2raw: color2.toString(),\r\n            color2: color2,\r\n            boardSize: gridInfo.boardSize,\r\n            cellSize: gridInfo.cellSize,\r\n            generation: this.game.generation,\r\n            width: this.game.width,\r\n            height: this.game.height,\r\n            grid: this.game.grid\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.lastFrame = Date.now()\r\n        this.interval = setInterval(this.runFrame, 2)\r\n        window.addEventListener('click', this.onClick)\r\n        window.addEventListener('keydown', this.onKeyDown)\r\n        window.addEventListener('resize', this.onResize)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.interval)\r\n        window.removeEventListener('click', this.onClick)\r\n        window.removeEventListener('keydown', this.onKeyDown)\r\n        window.removeEventListener('resize', this.onResize)\r\n    }\r\n\r\n    calcGridSize(boardSize) {\r\n        const w = Math.floor(window.innerWidth * 0.75)\r\n        const h = Math.floor(window.innerHeight * 0.90)\r\n        const cellSize = Math.floor(Math.min(w, h) / boardSize) || 1\r\n        const width = Math.floor(w / cellSize)\r\n        const height = Math.floor(h / cellSize)\r\n\r\n        return {\r\n            boardSize: boardSize,\r\n            cellSize: cellSize,\r\n            width: width,\r\n            height: height\r\n        }\r\n    }\r\n\r\n    runFrame() {\r\n        if (this.state.running) {\r\n            if (this.game.updateGeneration(this.state.speed)) {\r\n                this.setState({ generation: this.game.generation, grid: this.game.grid })\r\n            }\r\n        } else {\r\n            this.game.doNothing()\r\n        }\r\n    }\r\n\r\n    handleDrawCell(x, y) {\r\n        this.game.drawCell(x, y, 1)\r\n        this.setState({\r\n            grid: this.game.grid\r\n        })\r\n    }\r\n\r\n    handleContextMenu(sx, sy, x, y) {\r\n        if (sx + this.context.offsetWidth > window.innerWidth) {\r\n            sx -= this.context.offsetWidth\r\n        }\r\n\r\n        if (sy + this.context.offsetHeight > window.innerHeight) {\r\n            sy -= this.context.offsetHeight\r\n        }\r\n\r\n        this.setState({\r\n            contextMenu: true,\r\n            contextMenuX: sx,\r\n            contextMenuY: sy,\r\n            contextMenuTargetX: x,\r\n            contextMenuTargetY: y\r\n        })\r\n    }\r\n\r\n    onClickRunPause(event) {\r\n        if (this.state.running) {\r\n            this.setState({\r\n                running: false\r\n            })\r\n        } else {\r\n            this.setState({\r\n                running: true\r\n            })\r\n        }\r\n    }\r\n\r\n    onClickShowHideGrid(event) {\r\n        if (this.state.showGrid) {\r\n            this.setState({\r\n                showGrid: false\r\n            })\r\n        } else {\r\n            this.setState({\r\n                showGrid: true\r\n            })\r\n        }\r\n    }\r\n\r\n    onClickClear(event) {\r\n        if (this.state.grid) {\r\n            this.game.reset()\r\n            this.setState({\r\n                running: false,\r\n                generation: this.game.generation,\r\n                grid: this.game.grid\r\n            })\r\n        }\r\n    }\r\n\r\n    onChangeSize(event) {\r\n        const boardSize = Number(event.target.value)\r\n\r\n        if (typeof boardSize === 'number' && boardSize !== this.state.boardSize) {\r\n            this.game.reset()\r\n\r\n            const gridInfo = this.calcGridSize(boardSize)\r\n\r\n            this.game.resize(gridInfo.width, gridInfo.height)\r\n\r\n            this.setState({\r\n                running: false,\r\n                boardSize: gridInfo.boardSize,\r\n                cellSize: gridInfo.cellSize,\r\n                width: this.game.width,\r\n                height: this.game.height,\r\n                generation: this.game.generation,\r\n                grid: this.game.grid\r\n            })\r\n        }\r\n    }\r\n\r\n    onChangeSpeed(event) {\r\n        const speed = Number(event.target.value)\r\n\r\n        if (typeof speed === 'number' && speed !== this.state.speed) {\r\n            this.setState({\r\n                speed: speed\r\n            })\r\n        }\r\n    }\r\n\r\n    onChangeColor(event, index) {\r\n        if (index === 1) {\r\n            const color = this.state.color1\r\n            color.fromString(event.target.value)\r\n            this.setState({\r\n                color1raw: event.target.value,\r\n                color1: color\r\n            })\r\n        } else if (index === 2) {\r\n            const color = this.state.color2\r\n            color.fromString(event.target.value)\r\n            this.setState({\r\n                color2raw: event.target.value,\r\n                color2: color\r\n            })\r\n        }\r\n    }\r\n\r\n    onChangeSteps(event) {\r\n        const steps = Number(event.target.value)\r\n\r\n        if (typeof steps === 'number' && steps !== this.state.steps) {\r\n            this.setState({\r\n                steps: steps\r\n            })\r\n        }\r\n    }\r\n\r\n    onChangeRandomPercent(event) {\r\n        const randomPercent = Number(event.target.value)\r\n\r\n        if (typeof randomPercent === 'number' && randomPercent !== this.state.randomPercent) {\r\n            this.setState({\r\n                randomPercent: randomPercent\r\n            })\r\n        }\r\n    }\r\n\r\n    onClickRandom(event) {\r\n        this.game.initialize('random', this.state.randomPercent / 100)\r\n        this.setState({\r\n            generation: this.game.generation,\r\n            grid: this.game.grid\r\n        })\r\n    }\r\n\r\n    onChangeTestItems(event) {\r\n        const testItems = Number(event.target.value)\r\n\r\n        if (typeof testItems === 'number' && testItems !== this.state.testItems) {\r\n            this.setState({\r\n                testItems: testItems\r\n            })\r\n        }\r\n    }\r\n\r\n    onClickTest(event) {\r\n        this.game.initialize('test', this.state.testItems)\r\n        this.setState({\r\n            generation: this.game.generation,\r\n            grid: this.game.grid\r\n        })\r\n    }\r\n\r\n    onContextMenuItemClick(event, name) {\r\n        this.game.drawItem(this.state.contextMenuTargetX, this.state.contextMenuTargetY, name)\r\n        this.setState({\r\n            contextMenu: false,\r\n            grid: this.game.grid\r\n        })\r\n    }\r\n\r\n    onClick(event) {\r\n        if (this.state.contextMenu) {\r\n            this.setState({\r\n                contextMenu: false\r\n            })\r\n        }\r\n    }\r\n\r\n    onKeyDown(event) {\r\n        if (event.keyCode === 27) {\r\n            if (this.state.contextMenu) {\r\n                this.setState({\r\n                    contextMenu: false\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    onResize(event) {\r\n        if (window.outerWidth !== this.outerWidth || window.outerHeight !== this.outerHeight) {\r\n            this.outerWidth = window.outerWidth\r\n            this.outerHeight = window.outerHeight\r\n            this.game.reset()\r\n            const gridInfo = this.calcGridSize(this.state.boardSize)\r\n            this.game.resize(gridInfo.width, gridInfo.height)\r\n            this.setState({\r\n                running: false,\r\n                boardSize: gridInfo.boardSize,\r\n                cellSize: gridInfo.cellSize,\r\n                width: this.game.width,\r\n                height: this.game.height,\r\n                generation: this.game.generation,\r\n                grid: this.game.grid\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row justify-content-center mt-2\">\r\n                    <div className=\"col-2 text-center mt-2\">\r\n                        <h1 className=\"mt-2\"><a href=\"https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life\" target=\"_blank\" rel=\"noopener noreferrer\">Game of Life</a></h1>\r\n                        <div className=\"input-group mt-4\">\r\n                            <span className=\"input-group-addon\">Generation:</span>\r\n                            <input type=\"text\" className=\"form-control text-right no-select\" readOnly value={this.state.generation.toLocaleString()} />\r\n                        </div>\r\n                        <button className=\"btn btn-block mt-4\" onClick={this.onClickRunPause}>{this.state.running ? 'PAUSE' : 'RUN'}</button>\r\n                        <button className=\"btn btn-block mt-2\" onClick={this.onClickShowHideGrid}>{this.state.showGrid ? 'HIDE GRID' : 'SHOW GRID'}</button>\r\n                        <button className=\"btn btn-block mt-2\" onClick={this.onClickClear}>CLEAR</button>\r\n                        <div className=\"input-group mt-4\">\r\n                            <span className=\"input-group-addon\">Board Size:</span>\r\n                            <input type=\"text\" className=\"form-control text-right no-select\" readOnly value={this.state.width.toLocaleString() + ' x ' + this.state.height.toLocaleString()} />\r\n                        </div>\r\n                        <div className=\"mt-2\">\r\n                            <Slider min=\"20\" max=\"300\" onChange={this.onChangeSize} value={this.state.boardSize} />\r\n                        </div>\r\n                        <div className=\"input-group mt-4\">\r\n                            <span className=\"input-group-addon\">Sim Speed:</span>\r\n                            <input type=\"text\" className=\"form-control text-right no-select\" readOnly value={this.state.speed.toLocaleString()} />\r\n                        </div>\r\n                        <div className=\"mt-2\">\r\n                            <Slider min=\"1\" max=\"100\" onChange={this.onChangeSpeed} value={this.state.speed} />\r\n                        </div>\r\n                        <div className=\"form-group row mt-4 align-items-center\">\r\n                            <label className=\"col-8 col-form-label text-right no-select label\">Young Cell Color:</label>\r\n                            <div className=\"col-4\">\r\n                                <ColorPicker value={this.state.color1raw} onChange={(e) => this.onChangeColor(e, 1)} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group row mt-2 align-items-center\">\r\n                            <label className=\"col-8 col-form-label text-right no-select label\">Old Cell Color:</label>\r\n                            <div className=\"col-4\">\r\n                                <ColorPicker value={this.state.color2raw} onChange={(e) => this.onChangeColor(e, 2)} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"input-group mt-3\">\r\n                            <span className=\"input-group-addon\">Young to Old Generations:</span>\r\n                            <input type=\"text\" className=\"form-control text-right no-select\" readOnly value={this.state.steps.toLocaleString()} />\r\n                        </div>\r\n                        <div className=\"mt-2\">\r\n                            <Slider min=\"1\" max=\"100\" onChange={this.onChangeSteps} value={this.state.steps} />\r\n                        </div>\r\n                        <div className=\"input-group mt-4\">\r\n                            <span className=\"input-group-addon\">Random Population Percentage:</span>\r\n                            <input type=\"text\" className=\"form-control text-right no-select\" readOnly value={this.state.randomPercent.toLocaleString()} />\r\n                        </div>\r\n                        <div className=\"mt-2\">\r\n                            <Slider min=\"5\" max=\"70\" onChange={this.onChangeRandomPercent} value={this.state.randomPercent} />\r\n                        </div>\r\n                        <button className=\"btn btn-block mt-3\" onClick={this.onClickRandom}>GENERATE RANDOM</button>\r\n                        <div className=\"input-group mt-4\">\r\n                            <span className=\"input-group-addon\">Number of Test Items:</span>\r\n                            <input type=\"text\" className=\"form-control text-right no-select\" readOnly value={this.state.testItems.toLocaleString()} />\r\n                        </div>\r\n                        <div className=\"mt-2\">\r\n                            <Slider min=\"1\" max=\"100\" onChange={this.onChangeTestItems} value={this.state.testItems} />\r\n                        </div>\r\n                        <button className=\"btn btn-block mt-3\" onClick={this.onClickTest}>GENERATE TEST</button>\r\n                    </div>\r\n                    <div className=\"col-10 text-center\">\r\n                        <Board width={this.state.width} height={this.state.height} cellSize={this.state.cellSize} grid={this.state.grid} showGrid={this.state.showGrid}\r\n                            color1={this.state.color1} color2={this.state.color2} drawCell={this.handleDrawCell} handleContextMenu={this.handleContextMenu} steps={this.state.steps} />\r\n                        <nav ref={(elem) => this.context = elem} className={this.state.contextMenu ? 'context-menu context-menu--active' : 'context-menu'} style={{ left: this.state.contextMenuX, top: this.state.contextMenuY }}>\r\n                            <ul className=\"list-group\">\r\n                                {this.game.names.map((item, key) => {\r\n                                    return (\r\n                                        <li key={key} className=\"list-group-item\" onClick={(e) => this.onContextMenuItemClick(e, item)}>{item}</li>\r\n                                    )\r\n                                })}\r\n                            </ul>\r\n                        </nav>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}